@model Optica.Models.LoginViewModel
@{
    Layout = null;
    //ViewBag.Title = "Se connecter";
}
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8"/>
        <title>Connexion</title>
        <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>
        @Styles.Render("~/AppTheme/firstPartStyle")
    </head>
    <body class="login-page" style="font: normal 14px'Times new Roman';">
        <div class="login-box">
            <div class="login-logo">
                @*<a href="#">OPTICA</a>*@
            </div><!-- /login-logo -->
            <div class="login-box-body">
                <h4 class="login-box-msg" style="font-style:italic;">Veuillez vous identifier</h4>
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @*<h4>Utilisez un compte local pour vous connecter.</h4>*@
                    <hr />
                   
                    @Html.ValidationSummary(true, "", new { @class = "list-unstyled text-danger" })
                   
                    <div class="form-group has-feedback">
                        @*Html.LabelFor(m => m.UserName, new { @class = "" })
                    <div class=""></div>*@
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder="saisir votre login" })
                        <span class="glyphicon glyphicon-user form-control-feedback"></span>
                        @Html.ValidationMessageFor(m => m.UserName)

                    </div>
                    <div class="form-group has-feedback">
                        @*Html.LabelFor(m => m.Password, new { @class = "" })
                    <div class=""></div>*@
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder="saisir votre mot de passe" })
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                        @Html.ValidationMessageFor(m => m.Password)

                    </div>
                    <div class="row">
                        <div class="col-xs-8">
                            @*<div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe,"Connexion automatique")
                            </div>*@
                        </div>
                        <div class="col-xs-4">
                            <input type="submit" value="Connexion" class="btn btn-primary btn-sm" />
                        </div>
                    </div>
                    @*<p>
                    @Html.ActionLink("Enregistrez-vous", "Register") si vous n'avez pas de compte local.
                </p>*@
                }
            </div>
        </div><!-- / loginbox -->
        @Scripts.Render("~/AppTheme/firstPartScripts")
        <script type="text/javascript">
            $(function () {
                $('input').iCheck({
                    checkboxClass: 'icheckbox_square-blue',
                    radioClass: 'iradio_square-blue'//,
                    //increaseArea: '20%' // optional
                });
            });
        </script>
    </body>
</html>
@*<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Utilisez un compte local pour vous connecter.</h4>
                <hr />
                @Html.ValidationSummary(true)
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Connexion" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Enregistrez-vous", "Register") si vous n'avez pas de compte local.
                </p>
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new { Action = "ExternalLogin", ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@